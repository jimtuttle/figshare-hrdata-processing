stages:
  - fetch
  - process
  - send

default:
  tags: [docker-common]

fetch_input_files:
  stage: fetch
  image: mikesir87/aws-cli
  variables:
    HRDATA_BUCKET: vtlib-figshare-hrdata
    STUDENTDATA_BUCKET: vtlib-figshare-studentdata
  before_script:
    - FAILURE_MESSAGE="Must define \$AWS_ACCESS_KEY_ID and \$AWS_SECRET_ACCESS_KEY. Add keys to $CI_PROJECT_URL/-/settings/ci_cd"
    - test -z "$AWS_SECRET_ACCESS_KEY" && echo $FAILURE_MESSAGE && exit 1
    - test -z "$AWS_ACCESS_KEY_ID" && echo $FAILURE_MESSAGE && exit 1
  script:
    #- export LATEST_HRDATA_FILE=$(aws s3 ls $HRDATA_BUCKET --recursive | sort | tail -n 1 | awk '{print $4}')
    #- aws s3 cp s3://${HRDATA_BUCKET}/${LATEST_HRDATA_FILE} ./hrdata.xml
    - aws s3api get-object --bucket $HRDATA_BUCKET --key figdata.xml --version-id PTuS8e6roAq5LJybnt5InnLSDNUGDfK0 hrdata.xml
    - export LATEST_STUDENTDATA_FILE=$(aws s3 ls $STUDENTDATA_BUCKET --recursive | sort | tail -n 1 | awk '{print $4}') 
    - aws s3 cp s3://${STUDENTDATA_BUCKET}/${LATEST_STUDENTDATA_FILE} ./studentdata.csv
  artifacts:
    paths:
      - hrdata.xml
      - studentdata.csv
    expire_in: 3 days
  only: [schedules]

process_files:
  stage: process
  image: python:3
  script:
    - python3 figshareFeedProcessor.py
  artifacts:
    paths:
      - hrfeed.xml
      - uniqdeptmsg.txt
    expire_in: 3 days
  only: [schedules]

send_emails:
  stage: send
  image: ellimistgh/alpine-curl-git
  variables:
    FROM_EMAIL: vtul-systems-g@vt.edu
    TO_EMAIL: soumikgh@vt.edu
    SUBJECT: 'Figshare HRFeed Department Changes'
  script:
    #- curl -fsSL -X POST -H "Authorization: token $FIGSHARE_TOKEN" -F "hrfeed=@hrfeed.xml" $FIGSHARE_API_URL
    - if [ -f uniqdeptmsg.txt ]; then curl -fsSL -u api:$MAILGUN_API_KEY $MAILGUN_URL -F from=$FROM_EMAIL -F to=$TO_EMAIL -F subject="$SUBJECT - $(date +%Y-%m-%d)" -F text="$(cat uniqdeptmsg.txt)"; fi
  only: [schedules]
